{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,eAAe,kBAC9BC,MAAOF,SAASC,eAAe,aAC/BE,UAAWH,SAASC,eAAe,kBACnCG,aAAcJ,SAASK,cAAc,iBACrCC,OAAQN,SAASK,cAAc,gBCFjC,MAAME,EAAO,GACPC,EAAS,GAMf,SAASC,EAAcC,GACrB,GAAIZ,EAAKI,MAAMS,MAAMC,OAAOC,OAAS,EAAG,CACtC,MAAMC,EAAKd,SAASe,cAAc,MAClCD,EAAGE,YAAclB,EAAKI,MAAMS,MAC5Bb,EAAKC,KAAKkB,YAAYH,GAEtB,MAAMI,EAAYlB,SAASe,cAAc,UACzCG,EAAUC,UAAY,eACtBD,EAAUF,YAAc,SACxBF,EAAGG,YAAYC,GAEf,MAAME,EAAWpB,SAASe,cAAc,UACxCK,EAASJ,YAAc,QACvBF,EAAGG,YAAYG,GAEfF,EAAUG,iBAAiB,SAAS,SAAUX,GAC5CZ,EAAKC,KAAKuB,YAAYR,E,IAExBhB,EAAKI,MAAMS,MAAQ,GAEnBS,EAASC,iBAAiB,SAAS,WACjC,MACME,EAAW,CACfC,KAFSJ,EAASK,WAAWC,WAEpBV,aAEX,IAAIW,EAAkBC,aAAaC,QAAQ,OAC3C,GAAIF,EAAiB,CACHG,KAAKC,MAAMJ,GACnBK,KAAIC,GAAM1B,EAAK2B,KAAKD,I,CAG9B1B,EAAK2B,KAAKX,GACVH,EAASe,UAAW,EACpBf,EAASgB,UAAUC,IAAI,gBAEvB9B,EAAKyB,KAAIC,IACPzB,EAAO0B,KAAKD,EAAGT,KAAK,IAGtB,IAAIc,EAAS,GACIC,MAAMC,KAAK,IAAIC,IAAIjC,IAC3BwB,KAAIC,IACX,MAAMS,EAAM,CACVlB,KAAMS,GAERK,EAAOJ,KAAKQ,EAAI,IAElBd,aAAae,QAAQ,MAAOb,KAAKc,UAAUN,G,KAnDjDxC,EAAKQ,OAAOe,iBAAiB,QAASZ,GACtCT,SAASqB,iBAAiB,YAAY,SAAUX,GAChC,UAAVA,EAAEmC,KAAiBpC,G,IAqDzBX,EAAKM,aAAaiB,iBAAiB,SAASX,IAC1CZ,EAAKK,UAAU2C,YAAc,GAAGhD,EAAKK,UAAUQ,QAC/Cb,EAAKK,UAAUQ,MAAQ,EAAE,IC9D3B,WACE,MAAMgB,EAAkBC,aAAaC,QAAQ,OAC7C,GAAIF,EAAiB,CACnB,MAAMoB,EAAUjB,KAAKC,MAAMJ,GAc3B7B,EAAKC,KAAKiD,mBAAmB,YAA0BD,EAXlDf,KAAIC,GACI,6BAENA,EAAGT,wFAKLyB,KAAK,I,CAKMjD,SAASkD,iBAAiB,aAClCC,SAAQlB,IAChBA,EAAGZ,iBAAiB,SAAS,SAAUX,GACrC0C,QAAQC,IAAI3C,EAAE4C,OAAOC,QAAQ,OAC7BzD,EAAKC,KAAKuB,YAAYZ,EAAE4C,OAAOC,QAAQ,OACvC3B,aAAa4B,WAAW,M,GACxB,G,CDuCN","sources":["src/learning21/refs.js","src/learning21/script.js","src/learning21/getLS.js"],"sourcesContent":["const refs = {\n  list: document.getElementById('list-container'),\n  input: document.getElementById('input-box'),\n  inputName: document.getElementById('input-box-name'),\n  btnWriteName: document.querySelector('.button-write'),\n  btnAdd: document.querySelector('.button-add'),\n};\nexport { refs };\n","import { refs } from './refs';\nimport { getDataLS } from './getLS';\n\nconst data = [];\nconst newArr = [];\n\nrefs.btnAdd.addEventListener('click', onClickBtnAdd);\ndocument.addEventListener('keypress', function (e) {\n  if (e.key === 'Enter') onClickBtnAdd();\n});\nfunction onClickBtnAdd(e) {\n  if (refs.input.value.trim().length > 0) {\n    const li = document.createElement('li');\n    li.textContent = refs.input.value;\n    refs.list.appendChild(li);\n\n    const btnDelete = document.createElement('button');\n    btnDelete.className = 'btn-card btn';\n    btnDelete.textContent = 'Delete';\n    li.appendChild(btnDelete);\n\n    const btnWrite = document.createElement('button');\n    btnWrite.textContent = 'Write';\n    li.appendChild(btnWrite);\n\n    btnDelete.addEventListener('click', function (e) {\n      refs.list.removeChild(li);\n    });\n    refs.input.value = '';\n\n    btnWrite.addEventListener('click', function () {\n      const el = btnWrite.parentNode.firstChild;\n      const taskName = {\n        name: el.textContent,\n      };\n      let getLocalStorage = localStorage.getItem('KEY');\n      if (getLocalStorage) {\n        const getDate = JSON.parse(getLocalStorage);\n        getDate.map(el => data.push(el));\n      }\n\n      data.push(taskName);\n      btnWrite.disabled = true;\n      btnWrite.classList.add('btn-disabled');\n\n      data.map(el => {\n        newArr.push(el.name);\n      });\n\n      let result = [];\n      const sortData = Array.from(new Set(newArr));\n      sortData.map(el => {\n        const arr = {\n          name: el,\n        };\n        result.push(arr);\n      });\n      localStorage.setItem('KEY', JSON.stringify(result));\n    });\n  }\n}\nrefs.btnWriteName.addEventListener('click', e => {\n  refs.inputName.placeholder = `${refs.inputName.value}`;\n  refs.inputName.value = '';\n});\ngetDataLS();\n// function validatePIN(pin) {\n//   const arr = pin.split('');\n//   if (arr.length === 4 || arr.length === 6) {\n//     // for (const el of arr) {\n//     //   if (el === ' ') {\n//     //     return false;\n//     //   }\n//     // }\n//     return arr.every(number => {\n//       // console.log(number.trim());\n//       return !number.includes(' ') && !isNaN(Number(number));\n//     });\n//   } else {\n//     return false;\n//   }\n// }\n// console.log(validatePIN('12345'), false);\n// console.log(validatePIN('1234567'), false);\n// console.log(validatePIN('-1234'), false);\n// console.log(validatePIN('1.234'), false);\n// console.log(validatePIN('1234'), true, \"Wrong output for '1234'\");\n// console.log(validatePIN('0000'), true, \"Wrong output for '0000'\");\n// console.log(validatePIN('a111'), false, \"Wrong output for '1111'\");\n// console.log(validatePIN('123456'), true, \"Wrong output for '123456'\");\n// console.log(validatePIN('886 '));\n","import { refs } from './refs';\nfunction getDataLS() {\n  const getLocalStorage = localStorage.getItem('KEY');\n  if (getLocalStorage) {\n    const getDate = JSON.parse(getLocalStorage);\n    function createMarkup(value) {\n      return value\n        .map(el => {\n          return `\n         <li>\n         ${el.name}\n         <button class=\"btn-card btn\">Delete</button>\n         </li>\n      `;\n        })\n        .join('');\n    }\n\n    refs.list.insertAdjacentHTML('beforeend', createMarkup(getDate));\n  }\n  const btnDelete = document.querySelectorAll('.btn-card');\n  btnDelete.forEach(el => {\n    el.addEventListener('click', function (e) {\n      console.log(e.target.closest('li'));\n      refs.list.removeChild(e.target.closest('li'));\n      localStorage.removeItem('KEY');\n    });\n  });\n}\nexport { getDataLS };\n"],"names":["$a1c1c6710054d6fb$export$21666b427502ea6d","list","document","getElementById","input","inputName","btnWriteName","querySelector","btnAdd","$a50ee6dd821d8471$var$data","$a50ee6dd821d8471$var$newArr","$a50ee6dd821d8471$var$onClickBtnAdd","e","value","trim","length","li","createElement","textContent","appendChild","btnDelete","className","btnWrite","addEventListener","removeChild","taskName","name","parentNode","firstChild","getLocalStorage","localStorage","getItem","JSON","parse","map","el","push","disabled","classList","add","result","Array","from","Set","arr","setItem","stringify","key","placeholder","getDate","insertAdjacentHTML","join","querySelectorAll","forEach","console","log","target","closest","removeItem"],"version":3,"file":"index.8dafa805.js.map"}